version: '3'
services:

    #PHP Service
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: devilbox/php-fpm-8.0
        container_name: app
        restart: unless-stopped
        tty: true
        ports:
            - "8000:8000"
        volumes:
            - ./:/var/www
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        networks:
            - app-network
        depends_on:
            - webserver
            - cache_service
            - mysql_service

    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network

    #MySQL Service
    mysql_service:
        image: mysql:5.7.22
        container_name: mysql_service
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: laravel
            MYSQL_ROOT_PASSWORD: password
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - database_data:/var/lib/mysql
            - ./mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app-network

    phpmyadmin:
        image: phpmyadmin
        container_name: phpmyadmin
        restart: always
        ports:
            - 8080:80
        environment:
            - PMA_ARBITRARY=0
            - PMA_PORT=3306
            - PMA_HOST=mysql_service
            - PMA_USER=root
            - PMA_PASSWORD=password
        networks:
            - app-network
        depends_on:
            -   mysql_service
    cache_service:
        image: redis:alpine
        container_name: cache_service
        command: redis-server --appendonly yes
        volumes:
            - ./data/redis:/data
        networks:
            - app-network
        ports:
            - "6382:6379"
        #https://aregsar.com/blog/2020/laravel-app-with-redis-in-docker/


#Docker Networks
networks:
    app-network:
        driver: bridge
#Volumes
volumes:
    database_data:
        driver: local
